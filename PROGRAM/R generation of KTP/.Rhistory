ktp_print <- data.frame(Number = 1:nrow(ktp), Topic = ktp$Topic, All_time = ktp$Theory + ktp$Practice, Theory = ktp$Theory, Practice = ktp$Practice,  Date = ktp$Date, Fact = NA)
options(knitr.kable.NA = '')
kable(ktp_print, col.names = c("№", "Название раздела, темы", "Всего",	"Теория", "Практика", "План",	"Факт   "), align = "llccccc")
excurs_add <- ktp[ktp$Type %in% c("Addition", "Excursion"), c("Number", "Date", "Topic", "Theory"   "Practice")]
ktp$Type %in% c("Addition", "Excursion")
excurs_add <- ktp[ktp$Type %in% c("Addition", "Excursion"), c("Number", "Date", "Topic", "Theory",   "Practice")]
excurs_add
excurs_add$Teacher <- Teacher
Program
Program_name
Group
Year
Learning_year
pupils
paste("9:30", excurs_add$Date)
strptime(paste("9:30", excurs_add$Date) , format = "%H:%M %d/%m/%y" )
sum(excurs_add$Theory + excurs_add$Practice)
paste("9:30", excurs_add$Date) , format = "%H:%M %d/%m/%y" ) + excurs_add$Theory + excurs_add$Practice)
strptime(paste("9:30", excurs_add$Date) , format = "%H:%M %d/%m/%y" ) + excurs_add$Theory + excurs_add$Practice
strptime(paste("9:30", excurs_add$Date) , format = "%H:%M %d/%m/%y" ) + (excurs_add$Theory + excurs_add$Practice)*60*60)
strptime(paste("9:30", excurs_add$Date) , format = "%H:%M %d/%m/%y" ) + (excurs_add$Theory + excurs_add$Practice)*60*60
paste(strptime(paste("9:30", excurs_add$Date) , format = "%H:%M %d/%m/%y" ) + (excurs_add$Theory + excurs_add$Practice)*60*60)
format(strptime(paste("9:30", excurs_add$Date) , format = "%H:%M %d/%m/%y" ) + (excurs_add$Theory + excurs_add$Practice)*60*60, format = "H:M")
format(strptime(paste("9:30", excurs_add$Date) , format = "%H:%M %d/%m/%y" ) + (excurs_add$Theory + excurs_add$Practice)*60*60, format = "%H:%M")
excurs_add$Topic
excurs_add
excurs_add <- ktp[ktp$Type %in% c("Addition", "Excursion"), c("Number", "Date","Type", "Topic", "Theory",   "Practice")]
excurs_add$Teacher <- Teacher
excurs_add$Program <- Program_name
excurs_add$Group <- Group
excurs_add$Pupils <- pupils
excurs_add$Type
excurs_add$Time <- ifelse(excurs_add$Type == "Excursion", "9:30", "15:30")
excurs_add <- ktp[ktp$Type %in% c("Addition", "Excursion"), c("Number", "Date","Type", "Topic", "Theory",   "Practice")]
excurs_add$Teacher <- Teacher
excurs_add$Program <- Program_name
excurs_add$Group <- Group
excurs_add$Pupils <- pupils
excurs_add$Time_start <- ifelse(excurs_add$Type == "Excursion", "9:30", "15:30")
excurs_add$Time_start
excurs_add$Time_finish <- format(strptime(paste(Time_start, excurs_add$Date) , format = "%H:%M %d/%m/%y" ) + (excurs_add$Theory + excurs_add$Practice)*60*60, format = "%H:%M")
excurs_add$Time_finish <- format(strptime(paste(excurs_add$Time_start, excurs_add$Date) , format = "%H:%M %d/%m/%y" ) + (excurs_add$Theory + excurs_add$Practice)*60*60, format = "%H:%M")
excurs_add$Time_finish
excurs_add$Time <- paste(excurs_add$Time_start, excurs_add$Time_finish)
excurs_add$Time
excurs_add$Dur <- excurs_add$Theory + excurs_add$Practice
excurs_add
excurs_add$Dur
names(excurs_add)
excurs_add <- ktp[ktp$Type %in% c("Addition", "Excursion"), c("Number", "Date","Type", "Topic", "Theory",   "Practice")]
excurs_add$Teacher <- Teacher
excurs_add$Program <- Program_name
excurs_add$Group <- Group
excurs_add$Pupils <- pupils
#Задаем время начала экскурсии или выезда
excurs_add$Time_start <- ifelse(excurs_add$Type == "Excursion", "9:30", "15:30")
#Вычисляем время окончания экскурсии или выезда
excurs_add$Time_finish <- format(strptime(paste(excurs_add$Time_start, excurs_add$Date) , format = "%H:%M %d/%m/%y" ) + (excurs_add$Theory + excurs_add$Practice + 1)*60*60, format = "%H:%M")
excurs_add$Time <- paste(excurs_add$Time_start, excurs_add$Time_finish)
excurs_add$Dur <- excurs_add$Theory + excurs_add$Practice
excurs_add_print <- excurs_add[, c("Number", "Date", "Topic", "Teacher", "Program", "Group", "Pupils", "Time", "Dur")]
kable(excurs_add_print, col.names = c("№ п/п", "Дата выезда", "Место проведения и тема выезда (экскурсии)",	"Педагог", "Название образовательной программы", "№ группы",	"Количество учащихся", "Время (С какого по какой час. не считая дороги)", "Количество часов"), align = "llccccc")
#Вычисляем время окончания экскурсии или выезда
excurs_add$Time_finish <- format(strptime(paste(excurs_add$Time_start, excurs_add$Date) , format = "%H:%M %d/%m/%y" ) + (excurs_add$Theory + excurs_add$Practice)*60*60, format = "%H:%M")
excurs_add$Time <- paste(excurs_add$Time_start, excurs_add$Time_finish)
excurs_add$Dur <- excurs_add$Theory + excurs_add$Practice
excurs_add_print <- excurs_add[, c("Number", "Date", "Topic", "Teacher", "Program", "Group", "Pupils", "Time", "Dur")]
kable(excurs_add_print, col.names = c("№ п/п", "Дата выезда", "Место проведения и тема выезда (экскурсии)",	"Педагог", "Название образовательной программы", "№ группы",	"Количество учащихся", "Время (С какого по какой час. не считая дороги)", "Количество часов"), align = "llccccc")
teach_groups
teach_groups
teach_groups$Main_days <- c(
"Пятница",
"Вторник,Среда",
"Понедельник",
"Понедельник",
"Среда",
"Четверг,Суббота",
"Вторник,Среда",
"Суббота",
"Пятница")
# Педагоги и  группы ############
teach_groups <- data.frame(Group = c(139, 311, 218, 141, 220, 403, 110, 312, 140, 219), Teacher = c("Д.А. Аристов", "Д.А. Аристов", "Д.А. Аристов", "А. В. Полоскин", "А. В. Полоскин", "А. В. Полоскин", "В. М. Хайтов",  "В. М. Хайтов",  "В. М. Хайтов", "А. В. Ткачук" ))
teach_groups
teach_groups
# Педагоги и  группы ############
teach_groups <- data.frame(Group = c(139, 311, 218, 141, 220, 403, 312, 140, 219), Teacher = c("Д.А. Аристов", "Д.А. Аристов", "Д.А. Аристов", "А. В. Полоскин", "А. В. Полоскин", "А. В. Полоскин",  "В. М. Хайтов",  "В. М. Хайтов", "А. В. Ткачук" ))
teach_groups$Main_days <- c(
"Пятница",
"Вторник,Среда",
"Понедельник",
"Понедельник",
"Среда",
"Четверг,Суббота",
"Вторник,Среда",
"Суббота",
"Пятница")
teach_groups
teach_groups
strsplit(teach_groups$Main_days[teach_groups$Group == Group], split=',', fixed=TRUE)
Group <- 312
Learning_year <- as.numeric(substr(Group, start = 1, stop = 1))
First_day <- paste(First_day,"/",Year_begin, sep = "")
Last_day <- paste(Last_day,"/",Year_end, sep = "")
First_day <-strptime(First_day, format = "%d/%m/%Y")
Last_day <- strptime(Last_day, format = "%d/%m/%Y")
holydays <- strptime(holydays, format = "%d/%m/%Y")
Teacher <- as.character(teach_groups$Teacher[teach_groups$Group == Group])
Teacher
strsplit(teach_groups$Main_days[teach_groups$Group == Group], split=',', fixed=TRUE)
teach_groups$Addition_day <- c(
"Суббота,3",
NA,
"Среда,2",
"Пятница,3",
"Вторник,2",
NA,
NA,
"Понедельник,4",
"Четверг,4")
Addition_day <- strsplit(teach_groups$Addition_day[teach_groups$Group == Group], split=',', fixed=TRUE)
Addition_day
Addition_day
teach_groups$Excursion_day <- c(
"Воскресенье,3",
"Воскресенье,1",
NA,
"Воскресенье,3",
NA,
"Воскресенье,1",
"Воскресенье,1",
"Воскресенье,3",
NA)
teach_groups
teach_groups
Excursion_day
Addition_day
Main_days
library(knitr)
opts_chunk$set(echo = FALSE)
# базовые установки
Year_begin <- 2019
Year_end <- 2020
Group <- 312
First_day <- "10/09" #в 2019 году для 1 года начало 10 сентября, для всех остальных 2 сентября
Last_day <- "10/06"
holydays <- c("04/11/2019",
"31/12/2019",
"01/01/2020",
"02/01/2020",
"03/01/2020",
"04/01/2020",
"05/01/2020",
"06/01/2020",
"07/01/2020",
"08/01/2020",
"23/02/2020",
"24/02/2020",
"08/03/2020",
"09/03/2020",
"01/05/2020",
"09/05/2020")
# название программы #############
Program_name <- "Программа экологии морского бентоса (гидробиология)" #Берется в точности из файла "all_topics.csv"
# Педагоги и  группы ############
##### Надо заменить эту часть кода чтением установочной таблицы из csv-файла
teach_groups <- data.frame(Group = c(139, 311, 218, 141, 220, 403, 312, 140, 219), Teacher = c("Д.А. Аристов", "Д.А. Аристов", "Д.А. Аристов", "А. В. Полоскин", "А. В. Полоскин", "А. В. Полоскин",  "В. М. Хайтов",  "В. М. Хайтов", "А. В. Ткачук" ))
#Основные дни занятий
teach_groups$Main_days <- c(
"Пятница",
"Вторник,Среда",
"Понедельник",
"Понедельник",
"Среда",
"Четверг,Суббота",
"Вторник,Среда",
"Суббота",
"Пятница")
teach_groups$Addition_day <- c(
"Суббота,3",
NA,
"Среда,2",
"Пятница,3",
"Вторник,2",
NA,
NA,
"Понедельник,4",
"Четверг,4")
teach_groups$Excursion_day <- c(
"Воскресенье,3",
"Воскресенье,1",
NA,
"Воскресенье,3",
NA,
"Воскресенье,1",
"Воскресенье,1",
"Воскресенье,3",
NA)
######################################
# Производные установки
Learning_year <- as.numeric(substr(Group, start = 1, stop = 1))
First_day <- paste(First_day,"/",Year_begin, sep = "")
Last_day <- paste(Last_day,"/",Year_end, sep = "")
First_day <-strptime(First_day, format = "%d/%m/%Y")
Last_day <- strptime(Last_day, format = "%d/%m/%Y")
holydays <- strptime(holydays, format = "%d/%m/%Y")
Teacher <- as.character(teach_groups$Teacher[teach_groups$Group == Group])
Main_days <- strsplit(teach_groups$Main_days[teach_groups$Group == Group], split=',', fixed=TRUE)
Addition_day <- strsplit(teach_groups$Addition_day[teach_groups$Group == Group], split=',', fixed=TRUE)
Excursion_day <- strsplit(teach_groups$Excursion_day[teach_groups$Group == Group], split=',', fixed=TRUE)
#автоматически вводим количeство учащихся
pupils_df <- data.frame(Learning_year = 1:3, pupils = c(15, 12, 10))
pupils <- pupils_df$pupils[pupils_df$Learning_year == Learning_year]
library(dplyr)
# читаем все темы из базы
all_topics <- read.table("all_topics.csv", header = T, sep = ";")
# Делим темы на три части
main <- all_topics[all_topics$Type == "Main" & all_topics$Year == Learning_year, ]
main$Number <- 1:nrow(main)
addition <- all_topics[all_topics$Type == "Addition" & all_topics$Year == Learning_year, ]
addition$Number <- 1:nrow(addition)
Learning_year
all_topics$Type
addition <- all_topics[all_topics$Type == "Addition" & all_topics$Year == Learning_year, ]
# читаем все темы из базы
all_topics <- read.table("all_topics.csv", header = T, sep = ";")
# Делим темы на три части
main <- all_topics[all_topics$Type == "Main" & all_topics$Year == Learning_year, ]
main$Number <- 1:nrow(main)
addition <- all_topics[all_topics$Type == "Addition" & all_topics$Year == Learning_year, ]
addition$Number <- 1:nrow(addition)
nrow(addition)
library(dplyr)
# читаем все темы из базы
all_topics <- read.table("all_topics.csv", header = T, sep = ";")
# Делим темы на три части
main <- all_topics[all_topics$Type == "Main" & all_topics$Year == Learning_year, ]
main$Number <- 1:nrow(main)
addition <- all_topics[all_topics$Type == "Addition" & all_topics$Year == Learning_year, ]
if(! is.na(Addition_day))  addition$Number <- 1:nrow(addition)
excursion <- all_topics[all_topics$Type == "Excursion" & all_topics$Year == Learning_year, ]
if(! is.na(Excursion_day)) excursion$Number <- 1:nrow(excursion)
# Фрмируем датафрейм с числами занятий
all_days <- data.frame(Date = seq(as.Date(First_day), as.Date(Last_day), by="days"))
all_days$Week_day = weekdays(all_days$Date)
all_days$Month <- months(all_days$Date)
all_days <- all_days[!(all_days$Date %in% as.Date(holydays)), ] # удаляем праздники
# Соединяем в одном датафрейме даты и темы основных занятий
main_days_date <- all_days[all_days$Week_day %in% Main_days, ]
main_days_date$Number <- 1:nrow(main_days_date)
library(knitr)
opts_chunk$set(echo = FALSE)
# базовые установки
Year_begin <- 2019
Year_end <- 2020
Group <- 312
First_day <- "10/09" #в 2019 году для 1 года начало 10 сентября, для всех остальных 2 сентября
Last_day <- "10/06"
holydays <- c("04/11/2019",
"31/12/2019",
"01/01/2020",
"02/01/2020",
"03/01/2020",
"04/01/2020",
"05/01/2020",
"06/01/2020",
"07/01/2020",
"08/01/2020",
"23/02/2020",
"24/02/2020",
"08/03/2020",
"09/03/2020",
"01/05/2020",
"09/05/2020")
# название программы #############
Program_name <- "Программа экологии морского бентоса (гидробиология)" #Берется в точности из файла "all_topics.csv"
# Педагоги и  группы ############
##### Надо заменить эту часть кода чтением установочной таблицы из csv-файла
teach_groups <- data.frame(Group = c(139, 311, 218, 141, 220, 403, 312, 140, 219), Teacher = c("Д.А. Аристов", "Д.А. Аристов", "Д.А. Аристов", "А. В. Полоскин", "А. В. Полоскин", "А. В. Полоскин",  "В. М. Хайтов",  "В. М. Хайтов", "А. В. Ткачук" ))
#Основные дни занятий
teach_groups$Main_days <- c(
"Пятница",
"Вторник,Среда",
"Понедельник",
"Понедельник",
"Среда",
"Четверг,Суббота",
"Вторник,Среда",
"Суббота",
"Пятница")
teach_groups$Addition_day <- c(
"Суббота,3",
NA,
"Среда,2",
"Пятница,3",
"Вторник,2",
NA,
NA,
"Понедельник,4",
"Четверг,4")
teach_groups$Excursion_day <- c(
"Воскресенье,3",
"Воскресенье,1",
NA,
"Воскресенье,3",
NA,
"Воскресенье,1",
"Воскресенье,1",
"Воскресенье,3",
NA)
######################################
# Производные установки
Learning_year <- as.numeric(substr(Group, start = 1, stop = 1))
First_day <- paste(First_day,"/",Year_begin, sep = "")
Last_day <- paste(Last_day,"/",Year_end, sep = "")
First_day <-strptime(First_day, format = "%d/%m/%Y")
Last_day <- strptime(Last_day, format = "%d/%m/%Y")
holydays <- strptime(holydays, format = "%d/%m/%Y")
Teacher <- as.character(teach_groups$Teacher[teach_groups$Group == Group])
Main_days <- strsplit(teach_groups$Main_days[teach_groups$Group == Group], split=',', fixed=TRUE)
Addition_day <- strsplit(teach_groups$Addition_day[teach_groups$Group == Group], split=',', fixed=TRUE)
Excursion_day <- strsplit(teach_groups$Excursion_day[teach_groups$Group == Group], split=',', fixed=TRUE)
#автоматически вводим количeство учащихся
pupils_df <- data.frame(Learning_year = 1:3, pupils = c(15, 12, 10))
pupils <- pupils_df$pupils[pupils_df$Learning_year == Learning_year]
library(dplyr)
# читаем все темы из базы
all_topics <- read.table("all_topics.csv", header = T, sep = ";")
# Делим темы на три части
main <- all_topics[all_topics$Type == "Main" & all_topics$Year == Learning_year, ]
main$Number <- 1:nrow(main)
addition <- all_topics[all_topics$Type == "Addition" & all_topics$Year == Learning_year, ]
if(! is.na(Addition_day))  addition$Number <- 1:nrow(addition)
excursion <- all_topics[all_topics$Type == "Excursion" & all_topics$Year == Learning_year, ]
if(! is.na(Excursion_day)) excursion$Number <- 1:nrow(excursion)
# Фрмируем датафрейм с числами занятий
all_days <- data.frame(Date = seq(as.Date(First_day), as.Date(Last_day), by="days"))
all_days$Week_day = weekdays(all_days$Date)
all_days$Month <- months(all_days$Date)
all_days <- all_days[!(all_days$Date %in% as.Date(holydays)), ] # удаляем праздники
# Соединяем в одном датафрейме даты и темы основных занятий
main_days_date <- all_days[all_days$Week_day %in% Main_days, ]
main_days_date$Number <- 1:nrow(main_days_date)
nrow(main_days_date)
main_days_date
main_days_date
Main_days
Addition_day
Excursion_day
# читаем все темы из базы
all_topics <- read.table("all_topics.csv", header = T, sep = ";")
all_topics
all_topics
main
main
main$Number <- 1:nrow(main)
main$Number
addition <- all_topics[all_topics$Type == "Addition" & all_topics$Year == Learning_year, ]
addition
Addition_day
excursion <- all_topics[all_topics$Type == "Excursion" & all_topics$Year == Learning_year, ]
excursion
excursion
all_days$Month <- months(all_days$Date)
all_days$Week_day = weekdays(all_days$Date)
# Фрмируем датафрейм с числами занятий
all_days <- data.frame(Date = seq(as.Date(First_day), as.Date(Last_day), by="days"))
all_days$Week_day = weekdays(all_days$Date)
all_days$Month <- months(all_days$Date)
all_days <- all_days[!(all_days$Date %in% as.Date(holydays)), ] # удаляем праздники
# Соединяем в одном датафрейме даты и темы основных занятий
main_days_date <- all_days[all_days$Week_day %in% Main_days, ]
main_days_date$Number <- 1:nrow(main_days_date)
main_days_date
main_days_date
all_days$Week_day
Main_days
all_days$Week_day %in% Main_days
ctr(Main_days)
str(Main_days)
Main_days <- as.character(strsplit(teach_groups$Main_days[teach_groups$Group == Group], split=',', fixed=TRUE))
Main_days
unlist(strsplit(teach_groups$Main_days[teach_groups$Group == Group], split=',', fixed=TRUE))
Main_days <- unlist(strsplit(teach_groups$Main_days[teach_groups$Group == Group], split=',', fixed=TRUE))
str(Main_days)
Addition_day <- unlist(strsplit(teach_groups$Addition_day[teach_groups$Group == Group], split=',', fixed=TRUE))
Excursion_day <- unlist(strsplit(teach_groups$Excursion_day[teach_groups$Group == Group], split=',', fixed=TRUE))
str(Excursion_day)
# базовые установки
Year_begin <- 2019
Year_end <- 2020
Group <- 312
First_day <- "10/09" #в 2019 году для 1 года начало 10 сентября, для всех остальных 2 сентября
Last_day <- "10/06"
holydays <- c("04/11/2019",
"31/12/2019",
"01/01/2020",
"02/01/2020",
"03/01/2020",
"04/01/2020",
"05/01/2020",
"06/01/2020",
"07/01/2020",
"08/01/2020",
"23/02/2020",
"24/02/2020",
"08/03/2020",
"09/03/2020",
"01/05/2020",
"09/05/2020")
# название программы #############
Program_name <- "Программа экологии морского бентоса (гидробиология)" #Берется в точности из файла "all_topics.csv"
# Педагоги и  группы ############
##### Надо заменить эту часть кода чтением установочной таблицы из csv-файла
teach_groups <- data.frame(Group = c(139, 311, 218, 141, 220, 403, 312, 140, 219), Teacher = c("Д.А. Аристов", "Д.А. Аристов", "Д.А. Аристов", "А. В. Полоскин", "А. В. Полоскин", "А. В. Полоскин",  "В. М. Хайтов",  "В. М. Хайтов", "А. В. Ткачук" ))
#Основные дни занятий
teach_groups$Main_days <- c(
"Пятница",
"Вторник,Среда",
"Понедельник",
"Понедельник",
"Среда",
"Четверг,Суббота",
"Вторник,Среда",
"Суббота",
"Пятница")
teach_groups$Addition_day <- c(
"Суббота,3",
NA,
"Среда,2",
"Пятница,3",
"Вторник,2",
NA,
NA,
"Понедельник,4",
"Четверг,4")
teach_groups$Excursion_day <- c(
"Воскресенье,3",
"Воскресенье,1",
NA,
"Воскресенье,3",
NA,
"Воскресенье,1",
"Воскресенье,1",
"Воскресенье,3",
NA)
######################################
# Производные установки
Learning_year <- as.numeric(substr(Group, start = 1, stop = 1))
First_day <- paste(First_day,"/",Year_begin, sep = "")
Last_day <- paste(Last_day,"/",Year_end, sep = "")
First_day <-strptime(First_day, format = "%d/%m/%Y")
Last_day <- strptime(Last_day, format = "%d/%m/%Y")
holydays <- strptime(holydays, format = "%d/%m/%Y")
Teacher <- as.character(teach_groups$Teacher[teach_groups$Group == Group])
Main_days <- unlist(strsplit(teach_groups$Main_days[teach_groups$Group == Group], split=',', fixed=TRUE))
Addition_day <- unlist(strsplit(teach_groups$Addition_day[teach_groups$Group == Group], split=',', fixed=TRUE))
Excursion_day <- unlist(strsplit(teach_groups$Excursion_day[teach_groups$Group == Group], split=',', fixed=TRUE))
#автоматически вводим количeство учащихся
pupils_df <- data.frame(Learning_year = 1:3, pupils = c(15, 12, 10))
pupils <- pupils_df$pupils[pupils_df$Learning_year == Learning_year]
library(dplyr)
# читаем все темы из базы
all_topics <- read.table("all_topics.csv", header = T, sep = ";")
# Делим темы на три части
main <- all_topics[all_topics$Type == "Main" & all_topics$Year == Learning_year, ]
main$Number <- 1:nrow(main)
addition <- all_topics[all_topics$Type == "Addition" & all_topics$Year == Learning_year, ]
if(! is.na(Addition_day))  addition$Number <- 1:nrow(addition)
excursion <- all_topics[all_topics$Type == "Excursion" & all_topics$Year == Learning_year, ]
if(! is.na(Excursion_day)) excursion$Number <- 1:nrow(excursion)
# Фрмируем датафрейм с числами занятий
all_days <- data.frame(Date = seq(as.Date(First_day), as.Date(Last_day), by="days"))
all_days$Week_day = weekdays(all_days$Date)
all_days$Month <- months(all_days$Date)
all_days <- all_days[!(all_days$Date %in% as.Date(holydays)), ] # удаляем праздники
# Соединяем в одном датафрейме даты и темы основных занятий
main_days_date <- all_days[all_days$Week_day %in% Main_days, ]
main_days_date$Number <- 1:nrow(main_days_date)
main <- merge(main_days_date, main, by = "Number")
# Соединяем в одном датафрейме даты и темы факультативных занятий
addition_days_date <- all_days[all_days$Week_day %in% Addition_day[1], ]
addition_day_number <- as.numeric(Addition_day[2])
addition_days_date <- addition_days_date %>% group_by(Month) %>% do(tibble(Date = .$Date[addition_day_number], Week_day = .$Week_day[addition_day_number], Month = .$Month[addition_day_number] ))
addition_days_date <- addition_days_date[order(addition_days_date$Date), ]
if(! is.na(Addition_day)) addition_days_date$Number <- 1:nrow(addition_days_date)
if(! is.na(Addition_day)) addition <- merge(addition, addition_days_date, by = "Number")
# Соединяем в одном датафрейме даты и темы экскурсий
excursion_days_date <- all_days[all_days$Week_day %in% Excursion_day[1], ]
excursion_day_number <- as.numeric(Excursion_day[2])
excursion_days_date <- excursion_days_date %>% group_by(Month) %>% do(tibble(Date = .$Date[excursion_day_number], Week_day = .$Week_day[excursion_day_number], Month = .$Month[excursion_day_number] ))
excursion_days_date <- excursion_days_date[order(excursion_days_date$Date), ]
if(! is.na(Excursion_day)) excursion_days_date$Number <- 1:nrow(excursion_days_date)
if(! is.na(Excursion_day)) excursion <- merge(excursion, excursion_days_date, by = "Number")
# Соединяем все три датафрейма в один
ktp <- rbind(excursion, addition, main)
ktp <- ktp[order(ktp$Date), ]
ktp$Date <- format(ktp$Date, "%d/%m/%y")
ktp_print <- data.frame(Number = 1:nrow(ktp), Topic = ktp$Topic, All_time = ktp$Theory + ktp$Practice, Theory = ktp$Theory, Practice = ktp$Practice,  Date = ktp$Date, Fact = NA)
kable(ktp_print, col.names = c("№", "Название раздела, темы", "Всего",	"Теория", "Практика", "План",	"Факт   "), align = "llccccc")
excurs_add <- ktp[ktp$Type %in% c("Addition", "Excursion"), c("Number", "Date","Type", "Topic", "Theory",   "Practice")]
excurs_add$Teacher <- Teacher
excurs_add$Program <- Program_name
excurs_add$Group <- Group
excurs_add$Pupils <- pupils
#Задаем время начала экскурсии или выезда
excurs_add$Time_start <- ifelse(excurs_add$Type == "Excursion", "9:30", "15:30")
#Вычисляем время окончания экскурсии или выезда
excurs_add$Time_finish <- format(strptime(paste(excurs_add$Time_start, excurs_add$Date) , format = "%H:%M %d/%m/%y" ) + (excurs_add$Theory + excurs_add$Practice)*60*60, format = "%H:%M")
excurs_add$Time <- paste(excurs_add$Time_start, excurs_add$Time_finish)
excurs_add$Dur <- excurs_add$Theory + excurs_add$Practice
excurs_add_print <- excurs_add[, c("Number", "Date", "Topic", "Teacher", "Program", "Group", "Pupils", "Time", "Dur")]
kable(excurs_add_print, col.names = c("№ п/п", "Дата выезда", "Место проведения и тема выезда (экскурсии)",	"Педагог", "Название образовательной программы", "№ группы",	"Количество учащихся", "Время (С какого по какой час. не считая дороги)", "Количество часов"), align = "llccccc")
